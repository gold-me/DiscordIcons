@use 'sass:map';
/// Replace `$search` with `$replace` in `$string`
/// @author Hugo Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}


/// in_map — Checks if a $key exists in a map
/// @param {Map} $map
/// @param {*} $key 
/// @return {TRUE|FALSE} Boolen TRUE if $key is found in the $map, FALSE otherwise.   
 @function in_map($map, $key) {
  @return (null != map.get($map, $key));
}

/// map_get — Get value from map
/// @param {Map} $map
/// @param {*} $key
/// @return {*} Returns the value from the key, returns null otherwise.
@function map_get($map, $key) {
  $r: #{map.get($map, $key)};
  // @debug $r;
  @return #{$r};
}